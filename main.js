(()=>{"use strict";var e={formSelector:".popup__form",inputSelector:".popup__item",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_invalid",inputErrorClass:"popup__item_type_error",errorClass:"error_visible"},t=document.querySelector(".popup__form_add_card"),n=document.querySelector(".popup__form_edit_profile"),r=document.querySelector(".popup__form_update-avatar"),o=document.querySelector(".popup__item_input_name"),i=document.querySelector(".popup__item_input_occupation"),u=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),c=(document.querySelector("#button-delete-card"),document.querySelector(".profile__avatar-container")),l=document.querySelector(".profile__title"),s=document.querySelector(".profile__subtitle"),f=document.querySelector(".profile__avatar"),p=document.querySelector(".elements__items");function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function h(e,t,n){return t&&d(e.prototype,t),n&&d(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}document.querySelector(".popup__button"),document.querySelector("#popup-edit-profile");var y=h((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(r._validationConfig.inputErrorClass),n.classList.add(r._validationConfig.errorClass),n.textContent=t})),_(this,"_hideInputError",(function(e){var t=r._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(r._validationConfig.inputErrorClass),t.classList.remove(r._validationConfig.errorClass),t.textContent=""})),_(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),_(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),_(this,"disableButton",(function(){r._buttonElement.classList.add(r._validationConfig.inactiveButtonClass),r._buttonElement.disabled=!0})),_(this,"activateButton",(function(){r._buttonElement.classList.remove(r._validationConfig.inactiveButtonClass),r._buttonElement.disabled=!1})),_(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r.disableButton():r.activateButton()})),_(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r._toggleButtonState()}))}))})),_(this,"enableValidation",(function(){r._setEventListeners()})),_(this,"resetValidationErrors",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){r._hideInputError(e)}))})),this._validationConfig=t,this._formElement=n,this._buttonSubmitSelector=t.submitButtonSelector,this._buttonElement=this._formElement.querySelector(this._buttonSubmitSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._validationConfig.inputSelector))}));function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var v=function(){function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._templateSelector=n,this._handlePreviewCard=r,this._handleDeleteCard=o,this._handleAddLike=i,this._handleRemoveLike=u,this._likes=t.likes,this._userId=t.userId,this._cardId=t.cardId,this._ownerId=t.ownerId}var t,n;return t=e,(n=[{key:"_getCardTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCardElement",value:function(){return this._element=this._getCardTemplate(),this._cardImageElement=this._element.querySelector(".element__image"),this._cardNameElement=this._element.querySelector(".element__text"),this._likesCounter=this._element.querySelector(".element__like-number"),this._likeButton=this._element.querySelector(".element__like"),this._deleteButton=this._element.querySelector(".element__delete-button"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._cardNameElement.textContent=this._name,this._likesCounter.textContent="".concat(this._likes.length),this._setEventListeners(),this._handleCardLikeState(),this._checkId(),this._element}},{key:"_checkId",value:function(){this._userId!==this._ownerId&&this._deleteButton.remove()}},{key:"_handleCardLikeState",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._userId?e.addLike():e.removeLike()}))}},{key:"addLike",value:function(){this._likeButton.classList.add("element__like_active")}},{key:"removeLike",value:function(){this._likeButton.classList.remove("element__like_active")}},{key:"setLikesCount",value:function(e){this._likesCounter.textContent="".concat(e.likes.length)}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){e._likeButton.classList.contains("element__like_active")?e._handleRemoveLike():e._handleAddLike()})),this._deleteButton.addEventListener("click",(function(){e._handleDeleteCard(e)})),this._cardImageElement.addEventListener("click",(function(){e._handlePreviewCard(e._name,e._link)}))}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function b(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&b(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var w=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._closePopupKeydownEscHandler=this._closePopupKeydownEscHandler.bind(this)}var t,n;return t=e,(n=[{key:"openPopup",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._closePopupKeydownEscHandler)}},{key:"closePopup",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closePopupKeydownEscHandler)}},{key:"_closePopupKeydownEscHandler",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"_closePopupClickOverlayHandler",value:function(e){e.target.classList.contains("popup_opened")&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-icon").addEventListener("click",(function(){e.closePopup()})),this._popupElement.addEventListener("mousedown",this._closePopupClickOverlayHandler.bind(this))}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function L(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._name=t._popupElement.querySelector(".popup__figcaption"),t._link=t._popupElement.querySelector(".popup__image"),t}return t=u,(n=[{key:"openPopup",value:function(e,t){P(I(u.prototype),"openPopup",this).call(this),this._name.textContent=e,this._link.src=t,this._link.alt=e}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function A(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function V(e){return V=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},V(e)}var D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n._formElement=n._popupElement.querySelector(".popup__form"),n._inputList=n._formElement.querySelectorAll(".popup__item"),n._popupSubmitButton=n._formElement.querySelector(".popup__button"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formInputValues={},this._inputList.forEach((function(t){e._formInputValues[t.name]=t.value})),this._formInputValues}},{key:"setEventListeners",value:function(){var e=this;q(V(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.closePopup()}))}},{key:"closePopup",value:function(){q(V(u.prototype),"closePopup",this).call(this),this._formElement.reset()}},{key:"handleSubmitButtonText",value:function(e){this._popupSubmitButton.textContent=e?"Сохранение...":"Сохранить"}}])&&B(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=K(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},H.apply(this,arguments)}function K(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}function F(e,t){return F=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},F(e,t)}function J(e,t){if(t&&("object"===N(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&F(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return J(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._formElement=n._popupElement.querySelector(".popup__form"),n._handleFormSubmitDeleteCard=t,n._buttonElement=n._popupElement.querySelector(".popup__button_confirm"),n}return t=u,(n=[{key:"openPopup",value:function(e){H(M(u.prototype),"openPopup",this).call(this),this._card=e,this._buttonElement.focus()}},{key:"setEventListeners",value:function(){var e=this;H(M(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmitDeleteCard(e._card)}))}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(w);function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var G=function(){function e(t){var n=t.profileName,r=t.profileOccupation,o=t.profileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=n,this._profileOccupation=r,this._profileAvatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userInfo={name:this._profileName.textContent,about:this._profileOccupation.textContent,avatar:this._profileAvatar.src},this._userInfo}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileOccupation.textContent=e.about,this._profileAvatar.src=e.avatar}}])&&$(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var W=function(){function e(t){var n=t.url,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=n,this._headers=r}var t,n;return t=e,n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserProfileInfo",value:function(){var e=this;return this._userProfileInfo=fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then((function(t){return e._checkResponse(t)})),this._userProfileInfo}},{key:"getInitialCards",value:function(){var e=this;return this._initialCards=fetch("".concat(this._url,"/cards"),{headers:this._headers}).then((function(t){return e._checkResponse(t)})),this._initialCards}},{key:"editProfileInfo",value:function(e){var t=this;return this._editedProfileInfo=fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return t._checkResponse(e)})),this._editedProfileInfo}},{key:"addNewCards",value:function(e,t){var n=this;return this._newCards=fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._checkResponse(e)})),this._newCards}},{key:"likeCard",value:function(e){var t=this;return this._addedLike=fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._checkResponse(e)})),this._addedLike}},{key:"removeLikeCard",value:function(e){var t=this;return this._removedLike=fetch("".concat(this._url,"/cards/").concat(e._id,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)})),this._removedLike}},{key:"deleteCard",value:function(e){var t=this;return this._deletedCard=fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkResponse(e)})),this._deletedCard}},{key:"updateAvatar",value:function(e){var t=this;return this._updatedAvatar=fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._checkResponse(e)})),this._updatedAvatar}}],n&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function X(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Y=new y(e,n);Y.enableValidation();var Z=new y(e,t);Z.enableValidation();var ee=new y(e,r);ee.enableValidation();var te,ne=new W({url:"https://mesto.nomoreparties.co/v1/cohort-52/",headers:{authorization:"bbfe3381-78a1-420d-846d-3c7932cfb849","Content-Type":"application/json"}}),re=function(e,t){ae.openPopup(e,t)},oe=function(e){var t=new v({name:e.name,link:e.link,ownerId:e.owner._id,userId:te,cardId:e._id,likes:e.likes},".element__template",re,(function(){return fe.openPopup(t)}),(function(){return ne.likeCard(e).then((function(e){t.setLikesCount(e),t.addLike()})).catch((function(e){return console.log(e)}))}),(function(){return ne.removeLikeCard(e).then((function(e){t.setLikesCount(e),t.removeLike()})).catch((function(e){return console.log(e)}))}));return t.createCardElement()};Promise.all([ne.getInitialCards(),ne.getUserProfileInfo()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return X(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?X(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];te=i._id,ie.renderItems(o),ce.setUserInfo(i)})).catch((function(e){return console.log(e)}));var ie=new k({renderer:function(e){ie.addItem(oe(e))}},p),ue=new D("#popup-add-card",(function(e){return ue.handleSubmitButtonText(!0),ne.addNewCards(e.name,e.link).then((function(e){ie.addItem(oe(e)),ue.closePopup()})).catch((function(e){return console.log(e)}))}));ue.setEventListeners();var ae=new j("#popup-image");ae.setEventListeners();var ce=new G({profileName:l,profileOccupation:s,profileAvatar:f}),le=new D("#popup-edit-profile",(function(e){return le.handleSubmitButtonText(!0),ne.editProfileInfo(e).then((function(e){ce.setUserInfo(e),le.closePopup()})).catch((function(e){return console.log(e)}))}));le.setEventListeners();var se=new D("#popup-avatar-update",(function(e){return se.handleSubmitButtonText(!0),ne.updateAvatar(e).then((function(e){ce.setUserInfo(e),se.closePopup()})).catch((function(e){return console.log(e)}))}));se.setEventListeners();var fe=new z("#popup-confirm",(function(e){return ne.deleteCard(e._cardId).then((function(){e.deleteCard(),fe.closePopup()})).catch((function(e){return console.log(e)}))}));fe.setEventListeners(),u.addEventListener("click",(function(){var e;le.openPopup(),e=ce.getUserInfo(),o.value=e.name,i.value=e.about,Y.resetValidationErrors(),le.handleSubmitButtonText(!1)})),a.addEventListener("click",(function(){ue.openPopup(),Z.resetValidationErrors(),ue.handleSubmitButtonText(!1)})),c.addEventListener("click",(function(){se.openPopup(),se.handleSubmitButtonText(!1),ee.resetValidationErrors()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,